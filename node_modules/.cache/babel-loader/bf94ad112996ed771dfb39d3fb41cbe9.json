{"ast":null,"code":"var _jsxFileName = \"/Users/anupjaiswal/Desktop/FregranceFusion/src/contexts/cartContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState, useReducer, useEffect } from \"react\";\nimport { useAuth } from \"./authContext\";\nimport { getCartItems, addToCart, removeFromCart, updateQty } from \"../services/cartServices\";\nimport { addToWishlist } from \"../services/wishlistServices/addToWishlist\";\nimport { useWishlist } from \"./wishlistContext\";\nimport { cartReducer } from \"../reducers/cartReducer\";\nimport { toast } from \"react-hot-toast\";\nimport { getPrice, getDiscountInPrice } from \"../utils/cartPrice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst coupons = [{\n  id: 1,\n  discount: 10,\n  minPrice: 1500,\n  name: \"New Year Sale\"\n}, {\n  id: 2,\n  discount: 50,\n  minPrice: 3000,\n  name: \"Clearance Sale\"\n}];\nconst CartContext = /*#__PURE__*/createContext();\n\nconst CartProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [cartState, cartDispatch] = useReducer(cartReducer, []);\n  const {\n    wishlistState,\n    wishlistDispatch\n  } = useWishlist();\n  const {\n    token,\n    isAuth,\n    navigate\n  } = useAuth();\n  const [loading, setLoading] = useState(false);\n  const [selectedCoupon, setSelectedCoupon] = useState({});\n  const cartPrice = {\n    deliveryCharges: 49,\n    price: getPrice(cartState),\n    discountInPrice: getDiscountInPrice(cartState)\n  };\n  useEffect(() => {\n    if (isAuth) {\n      try {\n        (async () => {\n          const {\n            data,\n            status\n          } = await getCartItems(token);\n\n          if (status === 200) {\n            cartDispatch({\n              type: \"SET_CART_DATA\",\n              payload: data.cart\n            });\n          }\n        })();\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  }, [isAuth, cartState]);\n\n  const addToCartHandler = async product => {\n    if (isAuth) {\n      setLoading(true);\n      const {\n        data,\n        status\n      } = await addToCart(product, token);\n      setLoading(false);\n\n      if (status === 201) {\n        toast.success(\"Product added to Cart!\");\n        cartDispatch({\n          type: \"SET_CART_DATA\",\n          payload: data.cart\n        });\n      }\n    } else {\n      navigate(\"/login\");\n    }\n  };\n\n  const removeFromCartHandler = async product => {\n    setLoading(true);\n    const {\n      data,\n      status\n    } = await removeFromCart(product._id, token);\n    setLoading(false);\n\n    if (status === 200) {\n      toast.success(\"Product removed from Cart!\");\n      cartDispatch({\n        type: \"SET_CART_DATA\",\n        payload: data.cart\n      });\n    }\n  };\n\n  const updateQtyHandler = async (product, type) => {\n    if (type === \"decrement\" && product.qty === 1) {\n      removeFromCartHandler(product);\n    } else {\n      setLoading(true);\n      const {\n        data,\n        status\n      } = await updateQty(product._id, token, type);\n      setLoading(false);\n\n      if (status === 200) {\n        toast.success(\"Updated product quantity!\");\n        cartDispatch({\n          type: \"SET_CART_DATA\",\n          payload: data.cart\n        });\n      }\n    }\n  };\n\n  const moveToWishlistHandler = async product => {\n    removeFromCartHandler(product);\n    const itemExists = wishlistState.find(item => item._id === product._id);\n\n    if (!itemExists) {\n      setLoading(true);\n      const {\n        data,\n        status\n      } = await addToWishlist(product, token);\n      setLoading(false);\n\n      if (status === 201) {\n        toast.success(\"Product moved to Wishlist!\");\n        wishlistDispatch({\n          type: \"SET_WISHLIST_DATA\",\n          payload: data.wishlist\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartState,\n      cartDispatch,\n      addToCartHandler,\n      removeFromCartHandler,\n      updateQtyHandler,\n      moveToWishlistHandler,\n      loading,\n      coupons,\n      selectedCoupon,\n      setSelectedCoupon,\n      cartPrice\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"C4fnMT9mMulGBKwUShQx2gYJhDk=\", false, function () {\n  return [useWishlist, useAuth];\n});\n\n_c = CartProvider;\n\nconst useCart = () => {\n  _s2();\n\n  return useContext(CartContext);\n};\n\n_s2(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { CartProvider, useCart };\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/Users/anupjaiswal/Desktop/FregranceFusion/src/contexts/cartContext.js"],"names":["createContext","useContext","useState","useReducer","useEffect","useAuth","getCartItems","addToCart","removeFromCart","updateQty","addToWishlist","useWishlist","cartReducer","toast","getPrice","getDiscountInPrice","coupons","id","discount","minPrice","name","CartContext","CartProvider","children","cartState","cartDispatch","wishlistState","wishlistDispatch","token","isAuth","navigate","loading","setLoading","selectedCoupon","setSelectedCoupon","cartPrice","deliveryCharges","price","discountInPrice","data","status","type","payload","cart","err","console","error","addToCartHandler","product","success","removeFromCartHandler","_id","updateQtyHandler","qty","moveToWishlistHandler","itemExists","find","item","wishlist","useCart"],"mappings":"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","sourcesContent":["import {\n  createContext,\n  useContext,\n  useState,\n  useReducer,\n  useEffect,\n} from \"react\";\nimport { useAuth } from \"./authContext\";\nimport {\n  getCartItems,\n  addToCart,\n  removeFromCart,\n  updateQty,\n} from \"../services/cartServices\";\nimport { addToWishlist } from \"../services/wishlistServices/addToWishlist\";\nimport { useWishlist } from \"./wishlistContext\";\nimport { cartReducer } from \"../reducers/cartReducer\";\nimport { toast } from \"react-hot-toast\";\nimport { getPrice, getDiscountInPrice } from \"../utils/cartPrice\";\n\nconst coupons = [\n  { id: 1, discount: 10, minPrice: 1500, name: \"New Year Sale\" },\n  { id: 2, discount: 50, minPrice: 3000, name: \"Clearance Sale\" },\n];\n\nconst CartContext = createContext();\n\nconst CartProvider = ({ children }) => {\n  const [cartState, cartDispatch] = useReducer(cartReducer, []);\n  const { wishlistState, wishlistDispatch } = useWishlist();\n  const { token, isAuth, navigate } = useAuth();\n  const [loading, setLoading] = useState(false);\n\n  const [selectedCoupon, setSelectedCoupon] = useState({});\n\n  const cartPrice = {\n    deliveryCharges: 49,\n    price: getPrice(cartState),\n    discountInPrice: getDiscountInPrice(cartState),\n  };\n\n  useEffect(() => {\n    if (isAuth) {\n      try {\n        (async () => {\n          const { data, status } = await getCartItems(token);\n\n          if (status === 200) {\n            cartDispatch({ type: \"SET_CART_DATA\", payload: data.cart });\n          }\n        })();\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  }, [isAuth, cartState]);\n\n  const addToCartHandler = async (product) => {\n    if (isAuth) {\n      setLoading(true);\n      const { data, status } = await addToCart(product, token);\n      setLoading(false);\n\n      if (status === 201) {\n        toast.success(\"Product added to Cart!\");\n        cartDispatch({ type: \"SET_CART_DATA\", payload: data.cart });\n      }\n    } else {\n      navigate(\"/login\");\n    }\n  };\n\n  const removeFromCartHandler = async (product) => {\n    setLoading(true);\n    const { data, status } = await removeFromCart(product._id, token);\n    setLoading(false);\n\n    if (status === 200) {\n      toast.success(\"Product removed from Cart!\");\n      cartDispatch({ type: \"SET_CART_DATA\", payload: data.cart });\n    }\n  };\n\n  const updateQtyHandler = async (product, type) => {\n    if (type === \"decrement\" && product.qty === 1) {\n      removeFromCartHandler(product);\n    } else {\n      setLoading(true);\n      const { data, status } = await updateQty(product._id, token, type);\n      setLoading(false);\n\n      if (status === 200) {\n        toast.success(\"Updated product quantity!\");\n        cartDispatch({ type: \"SET_CART_DATA\", payload: data.cart });\n      }\n    }\n  };\n\n  const moveToWishlistHandler = async (product) => {\n    removeFromCartHandler(product);\n\n    const itemExists = wishlistState.find((item) => item._id === product._id);\n\n    if (!itemExists) {\n      setLoading(true);\n      const { data, status } = await addToWishlist(product, token);\n      setLoading(false);\n\n      if (status === 201) {\n        toast.success(\"Product moved to Wishlist!\");\n        wishlistDispatch({\n          type: \"SET_WISHLIST_DATA\",\n          payload: data.wishlist,\n        });\n      }\n    }\n  };\n\n  return (\n    <CartContext.Provider\n      value={{\n        cartState,\n        cartDispatch,\n        addToCartHandler,\n        removeFromCartHandler,\n        updateQtyHandler,\n        moveToWishlistHandler,\n        loading,\n        coupons,\n        selectedCoupon,\n        setSelectedCoupon,\n        cartPrice,\n      }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n};\n\nconst useCart = () => useContext(CartContext);\n\nexport { CartProvider, useCart };\n"]},"metadata":{},"sourceType":"module"}