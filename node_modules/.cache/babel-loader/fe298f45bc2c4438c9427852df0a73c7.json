{"ast":null,"code":"var _jsxFileName = \"/Users/anupjaiswal/Desktop/FregranceFusion/src/contexts/addressContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useEffect, useReducer } from \"react\";\nimport toast from \"react-hot-toast\";\nimport { getAddressService, addAddressService, editAddressService, deleteAddressService } from \"../services/addressServices\";\nimport { useAuth } from \"./authContext\";\nimport { addressReducer, initialState, initialUserObj } from \"../reducers/addressReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddressContext = /*#__PURE__*/createContext();\n\nconst AddressProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [addressState, dispatchAddress] = useReducer(addressReducer, initialState);\n  const {\n    token,\n    isAuth\n  } = useAuth();\n  useEffect(() => {\n    if (isAuth) {\n      try {\n        (async () => {\n          const {\n            data,\n            status\n          } = await getAddressService(token);\n\n          if (status === 200) {\n            dispatchAddress({\n              type: \"GET_ADDRESS\",\n              payload: data.address\n            });\n          }\n        })();\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  }, [token, isAuth]);\n\n  const submitFormHandler = async e => {\n    var _addressState$address;\n\n    e.preventDefault();\n    const addressExists = (_addressState$address = addressState.addresses) === null || _addressState$address === void 0 ? void 0 : _addressState$address.find(address => {\n      var _addressState$formDat;\n\n      return address._id === ((_addressState$formDat = addressState.formData) === null || _addressState$formDat === void 0 ? void 0 : _addressState$formDat._id);\n    });\n\n    if (addressExists) {\n      try {\n        const {\n          data,\n          status\n        } = await editAddressService(token, addressState.formData, addressExists._id);\n\n        if (status === 201) {\n          dispatchAddress({\n            type: \"GET_ADDRESS\",\n            payload: data.address\n          });\n          toast.success(\"Address updated\");\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    } else {\n      try {\n        const {\n          data,\n          status\n        } = await addAddressService(token, addressState.formData);\n\n        if (status === 201) {\n          dispatchAddress({\n            type: \"GET_ADDRESS\",\n            payload: data.address\n          });\n          toast.success(\"Address added\");\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  };\n\n  const deleteAddressHandler = async addressId => {\n    try {\n      const {\n        data,\n        status\n      } = await deleteAddressService(token, addressId);\n\n      if (status === 200) {\n        dispatchAddress({\n          type: \"GET_ADDRESS\",\n          payload: data.address\n        });\n        toast.success(\"Address deleted\");\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(AddressContext.Provider, {\n    value: {\n      addressState,\n      dispatchAddress,\n      submitFormHandler,\n      deleteAddressHandler,\n      initialState,\n      initialUserObj\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddressProvider, \"5v/5UaHN+t73OtuPvpH1xGLvS3g=\", false, function () {\n  return [useAuth];\n});\n\n_c = AddressProvider;\n\nconst useAddress = () => {\n  _s2();\n\n  return useContext(AddressContext);\n};\n\n_s2(useAddress, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { AddressProvider, useAddress };\n\nvar _c;\n\n$RefreshReg$(_c, \"AddressProvider\");","map":{"version":3,"sources":["/Users/anupjaiswal/Desktop/FregranceFusion/src/contexts/addressContext.js"],"names":["createContext","useContext","useEffect","useReducer","toast","getAddressService","addAddressService","editAddressService","deleteAddressService","useAuth","addressReducer","initialState","initialUserObj","AddressContext","AddressProvider","children","addressState","dispatchAddress","token","isAuth","data","status","type","payload","address","err","console","error","submitFormHandler","e","preventDefault","addressExists","addresses","find","_id","formData","success","deleteAddressHandler","addressId","useAddress"],"mappings":"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","sourcesContent":["import { createContext, useContext, useEffect, useReducer } from \"react\";\nimport toast from \"react-hot-toast\";\nimport {\n  getAddressService,\n  addAddressService,\n  editAddressService,\n  deleteAddressService,\n} from \"../services/addressServices\";\nimport { useAuth } from \"./authContext\";\nimport {\n  addressReducer,\n  initialState,\n  initialUserObj,\n} from \"../reducers/addressReducer\";\n\nconst AddressContext = createContext();\n\nconst AddressProvider = ({ children }) => {\n  const [addressState, dispatchAddress] = useReducer(\n    addressReducer,\n    initialState\n  );\n\n  const { token, isAuth } = useAuth();\n\n  useEffect(() => {\n    if (isAuth) {\n      try {\n        (async () => {\n          const { data, status } = await getAddressService(token);\n\n          if (status === 200) {\n            dispatchAddress({ type: \"GET_ADDRESS\", payload: data.address });\n          }\n        })();\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  }, [token, isAuth]);\n\n  const submitFormHandler = async (e) => {\n    e.preventDefault();\n\n    const addressExists = addressState.addresses?.find(\n      (address) => address._id === addressState.formData?._id\n    );\n\n    if (addressExists) {\n      try {\n        const { data, status } = await editAddressService(\n          token,\n          addressState.formData,\n          addressExists._id\n        );\n\n        if (status === 201) {\n          dispatchAddress({ type: \"GET_ADDRESS\", payload: data.address });\n          toast.success(\"Address updated\");\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    } else {\n      try {\n        const { data, status } = await addAddressService(\n          token,\n          addressState.formData\n        );\n\n        if (status === 201) {\n          dispatchAddress({ type: \"GET_ADDRESS\", payload: data.address });\n          toast.success(\"Address added\");\n        }\n      } catch (err) {\n        console.error(err);\n      }\n    }\n  };\n\n  const deleteAddressHandler = async (addressId) => {\n    try {\n      const { data, status } = await deleteAddressService(token, addressId);\n\n      if (status === 200) {\n        dispatchAddress({ type: \"GET_ADDRESS\", payload: data.address });\n        toast.success(\"Address deleted\");\n      }\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  return (\n    <AddressContext.Provider\n      value={{\n        addressState,\n        dispatchAddress,\n        submitFormHandler,\n        deleteAddressHandler,\n        initialState,\n        initialUserObj,\n      }}\n    >\n      {children}\n    </AddressContext.Provider>\n  );\n};\n\nconst useAddress = () => useContext(AddressContext);\n\nexport { AddressProvider, useAddress };\n"]},"metadata":{},"sourceType":"module"}