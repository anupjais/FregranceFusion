{"ast":null,"code":"var _jsxFileName = \"/Users/anupjaiswal/Desktop/FregranceFusion/src/contexts/productContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { createContext, useContext, useState, useEffect, useReducer } from \"react\";\nimport { productReducer, initialProducts } from \"../reducers/productReducer\";\nimport { filterTypes } from \"../constants/filterTypes\";\nimport { getProducts } from \"../services/productServices/getProducts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProductContext = /*#__PURE__*/createContext();\n\nconst ProductProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [productState, productDispatch] = useReducer(productReducer, initialProducts);\n  const [showFilter, setShowFilter] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [searchVal, setSearchVal] = useState(\"\");\n\n  const toggleFilter = () => {\n    setShowFilter(showFilter => !showFilter);\n  };\n\n  const {\n    DISPLAY_PRODUCTS\n  } = filterTypes;\n  useEffect(() => {\n    (async () => {\n      try {\n        setLoading(true);\n        const {\n          data\n        } = await getProducts();\n        setLoading(false);\n        data.products = data.products.map(product => ({ ...product,\n          discountedPrice: (product.price - product.price * product.discount / 100).toFixed(0)\n        }));\n        productDispatch({\n          type: DISPLAY_PRODUCTS,\n          payload: {\n            data: data.products\n          }\n        });\n      } catch (err) {\n        setLoading(false);\n        console.error(err);\n      }\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ProductContext.Provider, {\n    value: {\n      productState,\n      productDispatch,\n      filterTypes,\n      toggleFilter,\n      showFilter,\n      loading,\n      searchVal,\n      setSearchVal\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductProvider, \"ddpbImFtJBQcMRD0R1ZWepJMFtk=\");\n\n_c = ProductProvider;\n\nconst useProducts = () => {\n  _s2();\n\n  return useContext(ProductContext);\n};\n\n_s2(useProducts, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { ProductProvider, useProducts };\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductProvider\");","map":{"version":3,"sources":["/Users/anupjaiswal/Desktop/FregranceFusion/src/contexts/productContext.js"],"names":["createContext","useContext","useState","useEffect","useReducer","productReducer","initialProducts","filterTypes","getProducts","ProductContext","ProductProvider","children","productState","productDispatch","showFilter","setShowFilter","loading","setLoading","searchVal","setSearchVal","toggleFilter","DISPLAY_PRODUCTS","data","products","map","product","discountedPrice","price","discount","toFixed","type","payload","err","console","error","useProducts"],"mappings":";;;;AAAA,SACEA,aADF,EAEEC,UAFF,EAGEC,QAHF,EAIEC,SAJF,EAKEC,UALF,QAMO,OANP;AAOA,SAASC,cAAT,EAAyBC,eAAzB,QAAgD,4BAAhD;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,WAAT,QAA4B,yCAA5B;;AAEA,MAAMC,cAAc,gBAAGT,aAAa,EAApC;;AAEA,MAAMU,eAAe,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AACxC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCT,UAAU,CAChDC,cADgD,EAEhDC,eAFgD,CAAlD;AAKA,QAAM,CAACQ,UAAD,EAAaC,aAAb,IAA8Bb,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAACc,OAAD,EAAUC,UAAV,IAAwBf,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACgB,SAAD,EAAYC,YAAZ,IAA4BjB,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMkB,YAAY,GAAG,MAAM;AACzBL,IAAAA,aAAa,CAAED,UAAD,IAAgB,CAACA,UAAlB,CAAb;AACD,GAFD;;AAIA,QAAM;AAAEO,IAAAA;AAAF,MAAuBd,WAA7B;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd,KAAC,YAAY;AACX,UAAI;AACFc,QAAAA,UAAU,CAAC,IAAD,CAAV;AACA,cAAM;AAAEK,UAAAA;AAAF,YAAW,MAAMd,WAAW,EAAlC;AACAS,QAAAA,UAAU,CAAC,KAAD,CAAV;AAEAK,QAAAA,IAAI,CAACC,QAAL,GAAgBD,IAAI,CAACC,QAAL,CAAcC,GAAd,CAAmBC,OAAD,KAAc,EAC9C,GAAGA,OAD2C;AAE9CC,UAAAA,eAAe,EAAE,CACfD,OAAO,CAACE,KAAR,GACCF,OAAO,CAACE,KAAR,GAAgBF,OAAO,CAACG,QAAzB,GAAqC,GAFtB,EAGfC,OAHe,CAGP,CAHO;AAF6B,SAAd,CAAlB,CAAhB;AAQAhB,QAAAA,eAAe,CAAC;AACdiB,UAAAA,IAAI,EAAET,gBADQ;AAEdU,UAAAA,OAAO,EAAE;AAAET,YAAAA,IAAI,EAAEA,IAAI,CAACC;AAAb;AAFK,SAAD,CAAf;AAID,OAjBD,CAiBE,OAAOS,GAAP,EAAY;AACZf,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAgB,QAAAA,OAAO,CAACC,KAAR,CAAcF,GAAd;AACD;AACF,KAtBD;AAuBD,GAxBQ,EAwBN,EAxBM,CAAT;AA0BA,sBACE,QAAC,cAAD,CAAgB,QAAhB;AACE,IAAA,KAAK,EAAE;AACLpB,MAAAA,YADK;AAELC,MAAAA,eAFK;AAGLN,MAAAA,WAHK;AAILa,MAAAA,YAJK;AAKLN,MAAAA,UALK;AAMLE,MAAAA,OANK;AAOLE,MAAAA,SAPK;AAQLC,MAAAA;AARK,KADT;AAAA,cAYGR;AAZH;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CA1DD;;GAAMD,e;;KAAAA,e;;AA4DN,MAAMyB,WAAW,GAAG;AAAA;;AAAA,SAAMlC,UAAU,CAACQ,cAAD,CAAhB;AAAA,CAApB;;IAAM0B,W;;AAEN,SAASzB,eAAT,EAA0ByB,WAA1B","sourcesContent":["import {\n  createContext,\n  useContext,\n  useState,\n  useEffect,\n  useReducer,\n} from \"react\";\nimport { productReducer, initialProducts } from \"../reducers/productReducer\";\nimport { filterTypes } from \"../constants/filterTypes\";\nimport { getProducts } from \"../services/productServices/getProducts\";\n\nconst ProductContext = createContext();\n\nconst ProductProvider = ({ children }) => {\n  const [productState, productDispatch] = useReducer(\n    productReducer,\n    initialProducts\n  );\n\n  const [showFilter, setShowFilter] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [searchVal, setSearchVal] = useState(\"\");\n\n  const toggleFilter = () => {\n    setShowFilter((showFilter) => !showFilter);\n  };\n\n  const { DISPLAY_PRODUCTS } = filterTypes;\n\n  useEffect(() => {\n    (async () => {\n      try {\n        setLoading(true);\n        const { data } = await getProducts();\n        setLoading(false);\n\n        data.products = data.products.map((product) => ({\n          ...product,\n          discountedPrice: (\n            product.price -\n            (product.price * product.discount) / 100\n          ).toFixed(0),\n        }));\n\n        productDispatch({\n          type: DISPLAY_PRODUCTS,\n          payload: { data: data.products },\n        });\n      } catch (err) {\n        setLoading(false);\n        console.error(err);\n      }\n    })();\n  }, []);\n\n  return (\n    <ProductContext.Provider\n      value={{\n        productState,\n        productDispatch,\n        filterTypes,\n        toggleFilter,\n        showFilter,\n        loading,\n        searchVal,\n        setSearchVal,\n      }}\n    >\n      {children}\n    </ProductContext.Provider>\n  );\n};\n\nconst useProducts = () => useContext(ProductContext);\n\nexport { ProductProvider, useProducts };\n"]},"metadata":{},"sourceType":"module"}