{"ast":null,"code":"import { Server, Model, RestSerializer } from \"miragejs\";\nimport { getAllAddressesHandler, addNewAddressHandler, editAddressHandler, removeAddressHandler } from \"./backend/controllers/AddressController\";\nimport { loginHandler, signupHandler } from \"./backend/controllers/AuthController\";\nimport { addItemToCartHandler, getCartItemsHandler, removeItemFromCartHandler, updateCartItemHandler } from \"./backend/controllers/CartController\";\nimport { getAllCategoriesHandler, getCategoryHandler } from \"./backend/controllers/CategoryController\";\nimport { getAllProductsHandler, getProductHandler } from \"./backend/controllers/ProductController\";\nimport { addItemToWishlistHandler, getWishlistItemsHandler, removeItemFromWishlistHandler } from \"./backend/controllers/WishlistController\";\nimport { getOrdersHandler, addOrdersHandler } from \"./backend/controllers/OrderController\";\nimport { categories } from \"./backend/db/categories\";\nimport { products } from \"./backend/db/products\";\nimport { users } from \"./backend/db/users\";\nexport function makeServer() {\n  let {\n    environment = \"development\"\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return new Server({\n    serializers: {\n      application: RestSerializer\n    },\n    environment,\n    models: {\n      product: Model,\n      category: Model,\n      user: Model,\n      cart: Model,\n      wishlist: Model,\n      address: Model\n    },\n\n    // Runs on the start of the server\n    seeds(server) {\n      // disballing console logs from Mirage\n      server.logging = false;\n      products.forEach(item => {\n        server.create(\"product\", { ...item\n        });\n      });\n      users.forEach(item => server.create(\"user\", { ...item,\n        cart: [],\n        wishlist: [],\n        orders: []\n      }));\n      categories.forEach(item => server.create(\"category\", { ...item\n      }));\n    },\n\n    routes() {\n      this.namespace = \"api\"; // auth routes (public)\n\n      this.post(\"/auth/signup\", signupHandler.bind(this));\n      this.post(\"/auth/login\", loginHandler.bind(this)); // products routes (public)\n\n      this.get(\"/products\", getAllProductsHandler.bind(this));\n      this.get(\"/products/:productId\", getProductHandler.bind(this)); // categories routes (public)\n\n      this.get(\"/categories\", getAllCategoriesHandler.bind(this));\n      this.get(\"/categories/:categoryId\", getCategoryHandler.bind(this)); // cart routes (private)\n\n      this.get(\"/user/cart\", getCartItemsHandler.bind(this));\n      this.post(\"/user/cart\", addItemToCartHandler.bind(this));\n      this.post(\"/user/cart/:productId\", updateCartItemHandler.bind(this));\n      this.delete(\"/user/cart/:productId\", removeItemFromCartHandler.bind(this)); // wishlist routes (private)\n\n      this.get(\"/user/wishlist\", getWishlistItemsHandler.bind(this));\n      this.post(\"/user/wishlist\", addItemToWishlistHandler.bind(this));\n      this.delete(\"/user/wishlist/:productId\", removeItemFromWishlistHandler.bind(this)); // address routes (private)\n\n      this.get(\"/user/addresses\", getAllAddressesHandler.bind(this));\n      this.post(\"/user/address\", addNewAddressHandler.bind(this));\n      this.post(\"/user/address/:addressId\", editAddressHandler.bind(this));\n      this.delete(\"/user/address/:addressId\", removeAddressHandler.bind(this)); // order routes (private)\n\n      this.get(\"/user/order\", getOrdersHandler.bind(this));\n      this.post(\"/user/order\", addOrdersHandler.bind(this));\n    }\n\n  });\n}","map":{"version":3,"sources":["/Users/anupjaiswal/Desktop/e_commerce/src/server.js"],"names":["Server","Model","RestSerializer","getAllAddressesHandler","addNewAddressHandler","editAddressHandler","removeAddressHandler","loginHandler","signupHandler","addItemToCartHandler","getCartItemsHandler","removeItemFromCartHandler","updateCartItemHandler","getAllCategoriesHandler","getCategoryHandler","getAllProductsHandler","getProductHandler","addItemToWishlistHandler","getWishlistItemsHandler","removeItemFromWishlistHandler","getOrdersHandler","addOrdersHandler","categories","products","users","makeServer","environment","serializers","application","models","product","category","user","cart","wishlist","address","seeds","server","logging","forEach","item","create","orders","routes","namespace","post","bind","get","delete"],"mappings":"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","sourcesContent":["import { Server, Model, RestSerializer } from \"miragejs\";\nimport {\n  getAllAddressesHandler,\n  addNewAddressHandler,\n  editAddressHandler,\n  removeAddressHandler,\n} from \"./backend/controllers/AddressController\";\nimport {\n  loginHandler,\n  signupHandler,\n} from \"./backend/controllers/AuthController\";\nimport {\n  addItemToCartHandler,\n  getCartItemsHandler,\n  removeItemFromCartHandler,\n  updateCartItemHandler,\n} from \"./backend/controllers/CartController\";\nimport {\n  getAllCategoriesHandler,\n  getCategoryHandler,\n} from \"./backend/controllers/CategoryController\";\nimport {\n  getAllProductsHandler,\n  getProductHandler,\n} from \"./backend/controllers/ProductController\";\nimport {\n  addItemToWishlistHandler,\n  getWishlistItemsHandler,\n  removeItemFromWishlistHandler,\n} from \"./backend/controllers/WishlistController\";\nimport {\n  getOrdersHandler,\n  addOrdersHandler,\n} from \"./backend/controllers/OrderController\";\nimport { categories } from \"./backend/db/categories\";\nimport { products } from \"./backend/db/products\";\nimport { users } from \"./backend/db/users\";\n\nexport function makeServer({ environment = \"development\" } = {}) {\n  return new Server({\n    serializers: {\n      application: RestSerializer,\n    },\n    environment,\n    models: {\n      product: Model,\n      category: Model,\n      user: Model,\n      cart: Model,\n      wishlist: Model,\n      address: Model,\n    },\n\n    // Runs on the start of the server\n    seeds(server) {\n      // disballing console logs from Mirage\n      server.logging = false;\n      products.forEach((item) => {\n        server.create(\"product\", { ...item });\n      });\n\n      users.forEach((item) =>\n        server.create(\"user\", { ...item, cart: [], wishlist: [], orders: [] })\n      );\n\n      categories.forEach((item) => server.create(\"category\", { ...item }));\n    },\n\n    routes() {\n      this.namespace = \"api\";\n      // auth routes (public)\n      this.post(\"/auth/signup\", signupHandler.bind(this));\n      this.post(\"/auth/login\", loginHandler.bind(this));\n\n      // products routes (public)\n      this.get(\"/products\", getAllProductsHandler.bind(this));\n      this.get(\"/products/:productId\", getProductHandler.bind(this));\n\n      // categories routes (public)\n      this.get(\"/categories\", getAllCategoriesHandler.bind(this));\n      this.get(\"/categories/:categoryId\", getCategoryHandler.bind(this));\n\n      // cart routes (private)\n      this.get(\"/user/cart\", getCartItemsHandler.bind(this));\n      this.post(\"/user/cart\", addItemToCartHandler.bind(this));\n      this.post(\"/user/cart/:productId\", updateCartItemHandler.bind(this));\n      this.delete(\n        \"/user/cart/:productId\",\n        removeItemFromCartHandler.bind(this)\n      );\n\n      // wishlist routes (private)\n      this.get(\"/user/wishlist\", getWishlistItemsHandler.bind(this));\n      this.post(\"/user/wishlist\", addItemToWishlistHandler.bind(this));\n      this.delete(\n        \"/user/wishlist/:productId\",\n        removeItemFromWishlistHandler.bind(this)\n      );\n\n      // address routes (private)\n      this.get(\"/user/addresses\", getAllAddressesHandler.bind(this));\n      this.post(\"/user/address\", addNewAddressHandler.bind(this));\n      this.post(\"/user/address/:addressId\", editAddressHandler.bind(this));\n      this.delete(\"/user/address/:addressId\", removeAddressHandler.bind(this));\n\n      // order routes (private)\n      this.get(\"/user/order\", getOrdersHandler.bind(this));\n      this.post(\"/user/order\", addOrdersHandler.bind(this));\n    },\n  });\n}\n"]},"metadata":{},"sourceType":"module"}